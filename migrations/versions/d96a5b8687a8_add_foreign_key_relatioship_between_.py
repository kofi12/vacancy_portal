"""add foreign key relatioship between User and Organization

Revision ID: d96a5b8687a8
Revises: 765e0c4b0017
Create Date: 2025-06-26 02:45:53.217130

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd96a5b8687a8'
down_revision: Union[str, None] = '765e0c4b0017'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('organizations', sa.Column('owner_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'organizations', 'users', ['owner_id'], ['id'])
    op.add_column('users', sa.Column('community_org', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.alter_column('users', 'role',
               existing_type=postgresql.ENUM('ADMIN', 'SCWORKER', 'OWNER', 'PENDING', name='userrole'),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=False)
    op.drop_column('users', 'organization')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('organization', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.alter_column('users', 'role',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=postgresql.ENUM('ADMIN', 'SCWORKER', 'OWNER', 'PENDING', name='userrole'),
               existing_nullable=False)
    op.drop_column('users', 'community_org')
    op.drop_constraint(None, 'organizations', type_='foreignkey')
    op.drop_column('organizations', 'owner_id')
    # ### end Alembic commands ###
